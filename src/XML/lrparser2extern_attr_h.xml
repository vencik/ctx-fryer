<?xml version="1.0"?>
<!DOCTYPE xsl:stylesheet [
<!ENTITY dquote "&#34;">
<!ENTITY quote  "&#39;">
<!ENTITY dots   "&#133;">
<!ENTITY dollar "&#36;">
<!ENTITY eol    "&#10;">
]>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:ctx-fryer="ctx-fryer"
                xmlns:math="math"
                version="1.0">

<xsl:output method="text" encoding="ISO-8859-1" />
<xsl:strip-space elements="*" />


<!-- Prefix denoting built-in functions -->
<xsl:variable name="builtin-prefix"     select="'builtin::'" />
<xsl:variable name="builtin-prefix-len" select="string-length($builtin-prefix)" />


<!-- Generate attribute evaluator parameter list -->
<xsl:template name="generate-attr-evaluator-params">
  <xsl:param name="arity" data-type="number" />
  <xsl:param name="at"    data-type="number" select="0" />
  <xsl:if test="$at &lt; $arity">
    <xsl:text>, void *arg</xsl:text>
    <xsl:value-of select="$at" />
    <xsl:call-template name="generate-attr-evaluator-params">
      <xsl:with-param name="arity" select="$arity" />
      <xsl:with-param name="at"    select="$at + 1" />
    </xsl:call-template>
  </xsl:if>
</xsl:template>


<!-- External functions prototypes generation -->
<xsl:template match="lr-parser">#ifndef extern_attr_h
#define extern_attr_h

/**
 *  \brief  External attribute functions
 *
 *  The code is generated; do NOT change it, manually.
 *
 *  Below, hooks called by the syntax analyser
 *  upon attributes evaluation &amp; destruction
 *  are declared.
 *
 *  This file is part of code generated by CTXFryer
 *  while producing lexical analyser source code.
 *
 *  \date  2013/03/28
 */

#include "attribute.h"


/*
 * Attribute evaluators
 */

<xsl:for-each select="grammar/descendant::attribute/evaluators/list/list-item/function">
  <xsl:variable name="ident" data-type="string" select="@identifier" />
  <xsl:variable name="arity" data-type="number" select="@arity" />
  <xsl:if test="not(preceding::function/@identifier = $ident) and not(substring($ident, 1, $builtin-prefix-len) = $builtin-prefix)">
    <xsl:text>attr_eval_status_t </xsl:text>
    <xsl:value-of select="$ident" />
    <xsl:text>(void **value</xsl:text>
    <xsl:call-template name="generate-attr-evaluator-params">
      <xsl:with-param name="arity" select="$arity" />
    </xsl:call-template>
    <xsl:text>);&eol;</xsl:text>
  </xsl:if>
</xsl:for-each>
/*
 * Attribute destructors
 */

<xsl:for-each select="grammar/descendant::attribute/destructor/function">
  <xsl:variable name="ident" data-type="string" select="@identifier" />
  <xsl:if test="not(preceding::function/@identifier = $ident) and not(substring($ident, 1, $builtin-prefix-len) = $builtin-prefix)">
    <xsl:text>void </xsl:text>
    <xsl:value-of select="$ident" />
    <xsl:text>(void *value);&eol;</xsl:text>
  </xsl:if>
</xsl:for-each>
#endif  /* end of #ifndef extern_attr_h */
</xsl:template>

</xsl:stylesheet>
